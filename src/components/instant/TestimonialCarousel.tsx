'use client';

import { useState, useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Star, ChevronLeft, ChevronRight, Quote } from 'lucide-react';

export function TestimonialCarousel() {
  const [currentIndex, setCurrentIndex] = useState(0);

  const testimonials = [
    {
      name: 'Áî∞‰∏≠ ÁæéÂí≤',
      location: 'Ê∏ãË∞∑',
      rating: 5,
      comment:
        'ÊóÖË°åÂÖà„ÅßÊÄ•„Å´ÊíÆÂΩ±„Çí„ÅäÈ°ò„ÅÑ„Åó„Åü„ÅÆ„Åß„Åô„Åå„ÄÅ5ÂàÜ„ÅßÁ¥†Êïµ„Å™„Ç´„É°„É©„Éû„É≥„Åï„Çì„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„ÅüÔºÅÂÜôÁúü„ÇÇÊúüÂæÖ‰ª•‰∏ä„ÅÆ‰ªï‰∏ä„Åå„Çä„ÅßÂ§ßÊ∫ÄË∂≥„Åß„Åô„ÄÇ',
      type: '„Ç´„ÉÉ„Éó„É´ÊíÆÂΩ±',
      avatar: 'üë©',
    },
    {
      name: '‰ΩêËó§ ÂÅ•Â§™',
      location: 'ÊµÖËçâ',
      rating: 5,
      comment:
        '„Ç§„É≥„Çπ„ÇøÁî®„ÅÆÂÜôÁúü„ÅåÊ¨≤„Åó„Åè„Å¶Âà©Áî®„Åó„Åæ„Åó„Åü„ÄÇ„Éó„É≠„ÅÆÊäÄË°ì„ÅßÊíÆÂΩ±„Åó„Å¶„ÇÇ„Çâ„Å£„ÅüÂÜôÁúü„ÅØ„ÄÅ„ÅÑ„ÅÑ„Å≠„Åå„ÅÑ„Å§„ÇÇ„ÅÆ3ÂÄç„Å§„Åç„Åæ„Åó„ÅüÔºÅ',
      type: '„Éù„Éº„Éà„É¨„Éº„Éà',
      avatar: 'üë®',
    },
    {
      name: 'Â±±Áî∞ ÂÆ∂Êóè',
      location: '‰∏äÈáé',
      rating: 5,
      comment:
        'ÂÆ∂ÊóèÊóÖË°å„ÅÆË®òÂøµÂÜôÁúü„Çí„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åó„Åü„ÄÇÂ≠ê‰æõ„Åü„Å°„ÇÇÊ•Ω„Åó„Åù„ÅÜ„Å´ÊíÆÂΩ±„Å´ÂèÇÂä†„Åß„Åç„ÄÅÁ¥†Êïµ„Å™ÊÄù„ÅÑÂá∫„Å´„Å™„Çä„Åæ„Åó„Åü„ÄÇ',
      type: '„Éï„Ç°„Éü„É™„ÉºÊíÆÂΩ±',
      avatar: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
    },
    {
      name: 'Emily Johnson',
      location: 'Êñ∞ÂÆø',
      rating: 5,
      comment:
        'Êó•Êú¨ÊóÖË°å‰∏≠„Å´Âà©Áî®„Åó„Åæ„Åó„Åü„ÄÇËã±Ë™û„Åß„ÅÆ„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥„ÇÇÂïèÈ°å„Å™„Åè„ÄÅÊù±‰∫¨„ÅÆÁæé„Åó„ÅÑÂÜôÁúü„Çí„Åü„Åè„Åï„ÇìÊíÆ„Å£„Å¶„ÇÇ„Çâ„Åà„Åæ„Åó„ÅüÔºÅ',
      type: 'Ë¶≥ÂÖâÊíÆÂΩ±',
      avatar: 'üë©‚Äçü¶±',
    },
    {
      name: 'Èà¥Êú® ÂèãÁæé',
      location: 'ÂÖ≠Êú¨Êú®',
      rating: 5,
      comment:
        'ÂèãÈÅî„ÅÆË™ïÁîüÊó•„Çµ„Éó„É©„Ç§„Ç∫„ÅßÂà©Áî®„ÄÇÂ§úÊôØ„Çí„Éê„ÉÉ„ÇØ„Å´„Åó„ÅüÂÜôÁúü„ÅåÊú¨ÂΩì„Å´Á∂∫È∫ó„Åß„ÄÅÂèãÈÅî„ÇÇÂ§ßÂñú„Å≥„Åß„Åó„ÅüÔºÅ',
      type: '„Ç∞„É´„Éº„ÉóÊíÆÂΩ±',
      avatar: 'üë≠',
    },
  ];

  // Ëá™Âãï„Çπ„É©„Ç§„Éâ
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentIndex(prevIndex =>
        prevIndex === testimonials.length - 1 ? 0 : prevIndex + 1
      );
    }, 5000);

    return () => clearInterval(timer);
  }, [testimonials.length]);

  const goToPrevious = () => {
    setCurrentIndex(
      currentIndex === 0 ? testimonials.length - 1 : currentIndex - 1
    );
  };

  const goToNext = () => {
    setCurrentIndex(
      currentIndex === testimonials.length - 1 ? 0 : currentIndex + 1
    );
  };

  const goToSlide = (index: number) => {
    setCurrentIndex(index);
  };

  return (
    <div className="container mx-auto px-4">
      <div className="text-center mb-12">
        <h2 className="text-3xl font-bold text-gray-900 mb-4">„ÅäÂÆ¢Êßò„ÅÆÂ£∞</h2>
        <p className="text-gray-600 max-w-2xl mx-auto">
          ÂÆüÈöõ„Å´„ÅîÂà©Áî®„ÅÑ„Åü„Å†„ÅÑ„Åü„ÅäÂÆ¢Êßò„Åã„Çâ„ÄÅ„Åü„Åè„Åï„Çì„ÅÆÂ¨â„Åó„ÅÑ„ÅäÂ£∞„Çí„ÅÑ„Åü„Å†„ÅÑ„Å¶„ÅÑ„Åæ„Åô„ÄÇ
        </p>
      </div>

      <div className="relative max-w-4xl mx-auto">
        {/* „É°„Ç§„É≥„Ç´„É´„Éº„Çª„É´ */}
        <div className="overflow-hidden rounded-lg">
          <div
            className="flex transition-transform duration-500 ease-in-out"
            style={{ transform: `translateX(-${currentIndex * 100}%)` }}
          >
            {testimonials.map((testimonial, index) => (
              <div key={index} className="w-full flex-shrink-0">
                <Card className="mx-2 bg-white shadow-lg">
                  <CardContent className="p-8">
                    <div className="flex items-start gap-4">
                      <div className="flex-shrink-0">
                        <div className="w-16 h-16 bg-gradient-to-br from-blue-100 to-indigo-100 rounded-full flex items-center justify-center text-2xl">
                          {testimonial.avatar}
                        </div>
                      </div>

                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-2">
                          <h4 className="font-semibold text-lg">
                            {testimonial.name}
                          </h4>
                          <span className="text-sm text-gray-500">
                            ‚Ä¢ {testimonial.location}
                          </span>
                        </div>

                        <div className="flex items-center gap-2 mb-3">
                          <div className="flex">
                            {[...Array(testimonial.rating)].map((_, i) => (
                              <Star
                                key={i}
                                className="h-4 w-4 fill-yellow-400 text-yellow-400"
                              />
                            ))}
                          </div>
                          <span className="text-sm text-blue-600 font-medium">
                            {testimonial.type}
                          </span>
                        </div>

                        <div className="relative">
                          <Quote className="absolute -top-2 -left-2 h-6 w-6 text-blue-200" />
                          <p className="text-gray-700 leading-relaxed pl-4">
                            {testimonial.comment}
                          </p>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            ))}
          </div>
        </div>

        {/* „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
        <Button
          variant="outline"
          size="sm"
          className="absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-4 rounded-full w-10 h-10 p-0"
          onClick={goToPrevious}
        >
          <ChevronLeft className="h-4 w-4" />
        </Button>

        <Button
          variant="outline"
          size="sm"
          className="absolute right-0 top-1/2 transform -translate-y-1/2 translate-x-4 rounded-full w-10 h-10 p-0"
          onClick={goToNext}
        >
          <ChevronRight className="h-4 w-4" />
        </Button>

        {/* „Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº */}
        <div className="flex justify-center mt-6 gap-2">
          {testimonials.map((_, index) => (
            <button
              key={index}
              className={`w-3 h-3 rounded-full transition-colors ${
                index === currentIndex ? 'bg-blue-600' : 'bg-gray-300'
              }`}
              onClick={() => goToSlide(index)}
            />
          ))}
        </div>
      </div>

      {/* Áµ±Ë®àÊÉÖÂ†± */}
      <div className="mt-16 grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
        <div>
          <div className="text-3xl font-bold text-blue-600 mb-2">4.9/5</div>
          <div className="text-gray-600">Âπ≥ÂùáË©ï‰æ°</div>
        </div>
        <div>
          <div className="text-3xl font-bold text-green-600 mb-2">1,200+</div>
          <div className="text-gray-600">Ê∫ÄË∂≥„Åó„Åü„ÅäÂÆ¢Êßò</div>
        </div>
        <div>
          <div className="text-3xl font-bold text-purple-600 mb-2">98%</div>
          <div className="text-gray-600">„É™„Éî„Éº„ÉàÁéá</div>
        </div>
      </div>
    </div>
  );
}
