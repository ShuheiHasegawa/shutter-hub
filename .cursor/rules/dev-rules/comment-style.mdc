---
description: 
globs: 
alwaysApply: true
---
# コメント記述ルール

## 基本原則

### 簡潔性を重視
- 冗長な表現は避け、要点を的確に伝える
- 【目的】【メリット】などの装飾的な見出しは使用しない
- 一行で伝わることは一行で記述する

### 動詞で終わる文章
- コメントは必ず動詞で終わる文章で記述する
- 「〜する」「〜を行う」「〜を実行する」などの能動的な表現を使用する
- 名詞止めや体言止めは避ける

### 悪い例（動詞で終わらない）
```typescript
/**
 * 認証状態のチェック
 */

/**
 * 未認証状態でのS3リクエスト送信防止
 */
```

### 良い例（動詞で終わる）
```typescript
/**
 * 認証状態をチェックする
 */

/**
 * 未認証状態でのS3リクエスト送信を防止する
 */
```

### 悪い例（装飾的＋名詞止め）
```typescript
/**
 * 認証状態をチェック
 *
 * 【目的】
 * 未認証状態でのS3リクエスト送信を防止し、
 * 無駄なAPIコールとエラーレスポンスを回避
 */
```

### 良い例（簡潔＋動詞で終わる）
```typescript
/**
 * 認証状態をチェックする
 * 未認証状態でのS3リクエスト送信を防止する
 */
```

## 関数コメントの構造

### 基本形式
```typescript
/**
 * 関数の目的を1行で説明する
 * 必要に応じて補足説明を追記する
 */
```

### 複雑な関数の場合
```typescript
/**
 * 関数の目的を1行で説明する
 * 処理フロー：ステップ1 → ステップ2 → ステップ3を実行する
 */
```

### 使用例が必要な場合
```typescript
/**
 * 関数の目的を1行で説明する
 *
 * 使用例：
 * const result = await someFunction('parameter')
 */
```

## ファイル冒頭のコメント

### システム概要
```typescript
/**
 * システム名
 *
 * 解決する問題の概要を説明する
 * - 従来の問題点を解決する
 * - 改善内容と効果を提供する
 */
```

## 禁止事項

### 装飾的な区切り文字
```typescript
// ❌ 禁止
/**
 * ===== システム名 =====
 */

// ⭕ 推奨
/**
 * システム名
 */
```

### 過度な構造化
```typescript
// ❌ 禁止
/**
 * 【目的】
 * 【処理内容】
 * 【戻り値】
 */

// ⭕ 推奨
/**
 * 目的を簡潔に説明する
 * 必要に応じて処理内容を追記する
 */
```

### 名詞止め・体言止め
```typescript
// ❌ 禁止
/**
 * 変数のクリア
 * メモリリーク防止とリソース管理
 */

// ⭕ 推奨
/**
 * 変数をクリアする
 * メモリリークを防止してリソースを管理する
 */
```

### 当たり前のことの記述
```typescript
// ❌ 禁止（自明なコメント）
/**
 * 変数をクリアする
 * メモリリークを防止してリソースを管理する
 */
const clearVariable = () => {
  variable = null
}

// ⭕ 推奨（コメント不要）
const clearVariable = () => {
  variable = null
}
```

## インラインコメント

### 複雑な処理の説明
```typescript
// 期限切れキャッシュを自動削除する
urlCache.value.delete(path)
```

### 定数の説明
```typescript
const maxRetries = 15 // 最大1.5秒間待機する
```

## 動詞で終わる文章の例

### データ操作
- データを取得する
- 情報を更新する
- レコードを削除する
- キャッシュをクリアする

### 状態管理
- 状態を初期化する
- フラグを設定する
- エラーをリセットする
- 値を検証する

### 通信・非同期処理
- APIを呼び出す
- レスポンスを待機する
- エラーをハンドリングする
- 結果を返却する

### UI・表示制御
- 画面を表示する
- コンポーネントを描画する
- イベントを処理する
- フォームを送信する

## 目標
- 開発者が一読で理解できる
- 保守性を向上させる
- 無駄な情報を排除する
- 本質的な情報を強調する
- 動詞で終わる統一された文体を維持する
